{
	"info": {
		"_postman_id": "04652d1a-da67-4373-b78c-dad2ca0b4930",
		"name": "RWA_BACKEND",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "reset",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response check\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/reset",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"reset"
					]
				}
			},
			"response": []
		},
		{
			"name": "charge 10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response check\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});",
							"",
							"pm.test(\"response check\", function () {",
							"    pm.expect(pm.response.json().isAuthorized).to.eql(true);",
							"    pm.expect(pm.response.json().remainingBalance).to.eql(90);",
							"    pm.expect(pm.response.json().charges).to.eql(10);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/charge",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"charge"
					]
				}
			},
			"response": []
		},
		{
			"name": "charge 50",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response check\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});",
							"",
							"pm.test(\"response check\", function () {",
							"    pm.expect(pm.response.json().isAuthorized).to.eql(true);",
							"    pm.expect(pm.response.json().remainingBalance).to.eql(40);",
							"    pm.expect(pm.response.json().charges).to.eql(50);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"charges\": 50}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/charge",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"charge"
					]
				}
			},
			"response": []
		},
		{
			"name": "charge 50",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response check\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});",
							"",
							"pm.test(\"response check\", function () {",
							"    pm.expect(pm.response.json().isAuthorized).to.eql(false);",
							"    pm.expect(pm.response.json().remainingBalance).to.eql(40);",
							"    pm.expect(pm.response.json().charges).to.eql(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"charges\": 50}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/charge",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"charge"
					]
				}
			},
			"response": []
		},
		{
			"name": "charge 40",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response check\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});",
							"",
							"pm.test(\"response check\", function () {",
							"    pm.expect(pm.response.json().isAuthorized).to.eql(true);",
							"    pm.expect(pm.response.json().remainingBalance).to.eql(0);",
							"    pm.expect(pm.response.json().charges).to.eql(40);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"charges\": 40}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/charge",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"charge"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}